/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interface;

import Proccess.LoaiSP;

/**
 *
 * @author Lenovo
 */
public class frDanhmucLoaiSP extends javax.swing.JFrame {

    /**
     * Creates new form frDanhmucLoaiSP
     */
    public frDanhmucLoaiSP() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnSua = new javax.swing.JButton();
        btnLuu = new javax.swing.JButton();
        btnKLuu = new javax.swing.JButton();
        btnThoat = new javax.swing.JButton();
        lblMaloai = new javax.swing.JLabel();
        lblTenloai = new javax.swing.JLabel();
        txtMaloai = new javax.swing.JTextField();
        txtTenloai = new javax.swing.JTextField();
        btnThem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableSp = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("DANH MỤC LOẠI SẢN PHẨM  ");

        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnLuu.setText("Lưu");
        btnLuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuActionPerformed(evt);
            }
        });

        btnKLuu.setText("K.Lưu");
        btnKLuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKLuuActionPerformed(evt);
            }
        });

        btnThoat.setText("Thoát");
        btnThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThoatActionPerformed(evt);
            }
        });

        lblMaloai.setText("Mã loại :");

        lblTenloai.setText("Tên loại :");

        btnThem.setText("Thêm ");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        jScrollPane3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        tableSp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã loại", "Tên loại"
            }
        ));
        tableSp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableSpMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tableSp);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 489, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(btnThem)
                                .addGap(23, 23, 23)
                                .addComponent(btnXoa)
                                .addGap(26, 26, 26)
                                .addComponent(btnSua)
                                .addGap(22, 22, 22)
                                .addComponent(btnLuu)
                                .addGap(24, 24, 24)
                                .addComponent(btnKLuu)
                                .addGap(21, 21, 21)
                                .addComponent(btnThoat))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblMaloai, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblTenloai, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtMaloai, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtTenloai, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblMaloai, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtMaloai, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTenloai, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTenloai, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem)
                    .addComponent(btnXoa)
                    .addComponent(btnSua)
                    .addComponent(btnLuu)
                    .addComponent(btnKLuu)
                    .addComponent(btnThoat))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        int row = tableSp.getSelectedRow();
        if (row != -1) {
            String maloai = txtMaloai.getText();
            String tenloai = txtTenloai.getText();

            if (maloai.isEmpty() || tenloai.isEmpty()) {
                javax.swing.JOptionPane.showMessageDialog(this, "Vui lòng nhập đủ thông tin.");
            } else {
                try {
                    LoaiSP loaiSP = new LoaiSP();
                    loaiSP.setMaloai(maloai);
                    loaiSP.setTenloai(tenloai);

                    // Gọi hàm sửa dữ liệu từ lớp LoaiSP
                    if (loaiSP.EditData(loaiSP)) {
                        javax.swing.JOptionPane.showMessageDialog(this, "Sửa thành công.");
                        // Cập nhật trong bảng trên giao diện
                        tableSp.setValueAt(maloai, row, 0);
                        tableSp.setValueAt(tenloai, row, 1);
                    } else {
                        javax.swing.JOptionPane.showMessageDialog(this, "Sửa thất bại.");
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                    javax.swing.JOptionPane.showMessageDialog(this, "Lỗi trong quá trình sửa.");
                }
            }
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "Vui lòng chọn hàng để sửa.");
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnLuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuActionPerformed
        String maloai = txtMaloai.getText();
        String tenloai = txtTenloai.getText();

        if (maloai.isEmpty() || tenloai.isEmpty()) {
            javax.swing.JOptionPane.showMessageDialog(this, "Vui lòng nhập đủ thông tin.");
        } else {
            try {
                LoaiSP loaiSP = new LoaiSP();
                loaiSP.setMaloai(maloai);
                loaiSP.setTenloai(tenloai);

                // Kiểm tra xem có hàng nào được chọn trong bảng hay không
                int row = tableSp.getSelectedRow();
                if (row == -1) {  // Nếu không có hàng nào được chọn, thực hiện thêm mới
                    if (loaiSP.InsertData(loaiSP)) {
                        javax.swing.JOptionPane.showMessageDialog(this, "Thêm mới thành công.");
                        javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) tableSp.getModel();
                        model.addRow(new Object[]{maloai, tenloai});
                    } else {
                        javax.swing.JOptionPane.showMessageDialog(this, "Thêm mới thất bại.");
                    }
                } else {  // Nếu có hàng được chọn, thực hiện sửa
                    if (loaiSP.EditData(loaiSP)) {
                        javax.swing.JOptionPane.showMessageDialog(this, "Cập nhật thành công.");
                        // Cập nhật giá trị trên bảng
                        tableSp.setValueAt(maloai, row, 0);
                        tableSp.setValueAt(tenloai, row, 1);
                    } else {
                        javax.swing.JOptionPane.showMessageDialog(this, "Cập nhật thất bại.");
                    }
                }

                // Sau khi lưu thành công, reset các trường văn bản
                txtMaloai.setText("");
                txtTenloai.setText("");
            } catch (Exception e) {
                e.printStackTrace();
                javax.swing.JOptionPane.showMessageDialog(this, "Lỗi trong quá trình lưu.");
            }
        }
    }//GEN-LAST:event_btnLuuActionPerformed

    private void btnKLuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKLuuActionPerformed
        txtMaloai.setText("");
        txtTenloai.setText("");
    }//GEN-LAST:event_btnKLuuActionPerformed

    private void btnThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThoatActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnThoatActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        String maloai = txtMaloai.getText();
        String tenloai = txtTenloai.getText();

        if (maloai.isEmpty() || tenloai.isEmpty()) {
            javax.swing.JOptionPane.showMessageDialog(this, "Vui lòng nhập đủ thông tin.");
        } else {
            try {
                LoaiSP loaisp = new LoaiSP(); // khoi tao lop
                loaisp.setMaloai(maloai);
                loaisp.setTenloai(tenloai);

                //goi ham tu lop LoaiSP
                if (loaisp.InsertData(loaisp)) {
//                    javax.swing.JOptionPane.showConfirmDialog(this, "Thêm thành công !");

                    //thêm vào bảng trên giao diện
                    javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) tableSp.getModel();
                    model.addRow(new Object[]{maloai, tenloai});
                } else {
                    javax.swing.JOptionPane.showConfirmDialog(this, "thêm thất bại !");
                }
                // Xóa nội dung các trường sau khi thêm
                txtMaloai.setText("");
                txtTenloai.setText("");
            } catch (Exception e) {
                e.printStackTrace();
                javax.swing.JOptionPane.showConfirmDialog(this, "Lỗi !!!");
            }
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed

        int row = tableSp.getSelectedRow();
        if (row != -1) {
            String maloai = tableSp.getValueAt(row, 0).toString(); // Lay ma tu table
            try {
                LoaiSP loaisp = new LoaiSP();
                if (loaisp.DeleteData(maloai)) {
                    javax.swing.JOptionPane.showConfirmDialog(this, " xoa thanh cong !");
                    javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) tableSp.getModel();
                    model.removeRow(row);
                } else {
                    javax.swing.JOptionPane.showConfirmDialog(this, " xoa that bai !!!");
                }
            } catch (Exception e) {
                e.printStackTrace();
                javax.swing.JOptionPane.showMessageDialog(this, "Lỗi trong quá trình xóa.");
            }
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "Vui lòng chọn hàng để xóa.");
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void tableSpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableSpMouseClicked

        try {
            int row = this.tableSp.getSelectedRow();
            String ml = (this.tableSp.getModel().getValueAt(row, 0).toString());
            String tl = (this.tableSp.getModel().getValueAt(row, 1).toString());

            this.txtMaloai.setText(ml);
            this.txtTenloai.setText(tl);

        } catch (Exception e) {

        }
    }//GEN-LAST:event_tableSpMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frDanhmucLoaiSP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frDanhmucLoaiSP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frDanhmucLoaiSP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frDanhmucLoaiSP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frDanhmucLoaiSP().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnKLuu;
    private javax.swing.JButton btnLuu;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThoat;
    private javax.swing.JButton btnXoa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblMaloai;
    private javax.swing.JLabel lblTenloai;
    private javax.swing.JTable tableSp;
    private javax.swing.JTextField txtMaloai;
    private javax.swing.JTextField txtTenloai;
    // End of variables declaration//GEN-END:variables
}
